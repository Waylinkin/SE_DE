<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Chat_Enemy_BossFight" xml:space="preserve">
    <value>If you want to something done you have to do it yourself. Now is your time to die!</value>
  </data>
  <data name="Chat_Rebel_PlayerReady" xml:space="preserve">
    <value>Wait near the coordinates, we are almost there.</value>
  </data>
  <data name="Chat_Rebel_Tank" xml:space="preserve">
    <value>Glad you made it out of that wreck alive. Report to these coordinates, we have something for you...</value>
  </data>
  <data name="Chat_Rebel_TankDrop" xml:space="preserve">
    <value>Stand clear of the landing zone! Tank drop will commence shortly</value>
  </data>
  <data name="Chat_Rebel_TankDropped" xml:space="preserve">
    <value>Good luck.</value>
  </data>
  <data name="Chat_Rebel_TankReady" xml:space="preserve">
    <value>We are in position, ready to deploy.</value>
  </data>
  <data name="Chat_VA_DroneBlockDestroyed" xml:space="preserve">
    <value>Door is still locked. It may be necessary to destroy more nodes.</value>
  </data>
  <data name="Chat_VA_DroneControlStart" xml:space="preserve">
    <value>Proceed to door control room and destroy one of door control nodes.</value>
  </data>
  <data name="Chat_VA_DroneDoor" xml:space="preserve">
    <value>This door is currently under lockdown. They can be opened from room on the left.</value>
  </data>
  <data name="Chat_VA_DroneHint" xml:space="preserve">
    <value>Access to this section is restricted. There is combat drone station in this area however.</value>
  </data>
  <data name="Chat_VA_DroneHint2" xml:space="preserve">
    <value>Activate the drone from drone control room located nearby.</value>
  </data>
  <data name="Chat_VA_FrontGateOnFoot" xml:space="preserve">
    <value>Use of wreckage missile launchers is recommended to destroy fortress gate.</value>
  </data>
  <data name="Chat_VA_FrontGateTank" xml:space="preserve">
    <value>Use of your rocket launchers is recommended to destroy fortress gate.</value>
  </data>
  <data name="Chat_VA_Jetpack" xml:space="preserve">
    <value>Warning: suit hydrogen leak detected.</value>
  </data>
  <data name="Chat_VA_Outro" xml:space="preserve">
    <value>The drone factory is just ahead, I'm getting strange signals that I've not encountered before, that probably means the artefact is close and more than likely so is the CEO of the company who I imagine isn't going to be too happy with you.</value>
  </data>
  <data name="Chat_VA_ShipDestruction" xml:space="preserve">
    <value>Warning: Reactor core critical, explosion imminent.</value>
  </data>
  <data name="Chat_VA_Start" xml:space="preserve">
    <value>Warning: Reactor core overloading, evacuate ship immediately.</value>
  </data>
  <data name="Chat_VA_TankDestruction1" xml:space="preserve">
    <value>Your tank is no longer operable.</value>
  </data>
  <data name="Chat_VA_TankDestruction2" xml:space="preserve">
    <value>I have an alternative solution, some of these ship wrecks still have functioning turrets.</value>
  </data>
  <data name="Chat_VA_Warning" xml:space="preserve">
    <value>Warning, ship control is disabled. Collision with the planet is imminent.</value>
  </data>
  <data name="Chat_VA_Wreckage" xml:space="preserve">
    <value>This wreckage still has operable weaponry that you can use.</value>
  </data>
  <data name="GPS_Base" xml:space="preserve">
    <value>Main Entrance</value>
  </data>
  <data name="GPS_ControlRoom" xml:space="preserve">
    <value>Door Control Room</value>
  </data>
  <data name="GPS_Core" xml:space="preserve">
    <value>Base Core</value>
  </data>
  <data name="GPS_DoorControl" xml:space="preserve">
    <value>Door Control</value>
  </data>
  <data name="GPS_DronelRoom" xml:space="preserve">
    <value>Drone Control Room</value>
  </data>
  <data name="GPS_Escape" xml:space="preserve">
    <value>Escape route</value>
  </data>
  <data name="GPS_GearPanel" xml:space="preserve">
    <value>Gear Control Panel</value>
  </data>
  <data name="GPS_LZ" xml:space="preserve">
    <value>Landing Zone</value>
  </data>
  <data name="GPS_ShipWreckage" xml:space="preserve">
    <value>Usable ship wreckage </value>
  </data>
  <data name="LCD_TankPanel1_Line1" xml:space="preserve">
    <value>   Press {0} to toggle</value>
  </data>
  <data name="LCD_TankPanel1_Line2" xml:space="preserve">
    <value>        handbrake</value>
  </data>
  <data name="LCD_TankPanel2_Line1" xml:space="preserve">
    <value>  Press {0} to toggle</value>
  </data>
  <data name="LCD_TankPanel2_Line2" xml:space="preserve">
    <value>Third person view</value>
  </data>
  <data name="Quest01_GetOut" xml:space="preserve">
    <value>Evacuate the Ship!</value>
  </data>
  <data name="Quest01_GetOut_Countdown" xml:space="preserve">
    <value>Ship explosion in {0}...</value>
  </data>
  <data name="Quest01_GetOut_Line1" xml:space="preserve">
    <value>Ship reactor meltdown imminent</value>
  </data>
  <data name="Quest01_GetOut_Line2" xml:space="preserve">
    <value>Escape the ship immediately!</value>
  </data>
  <data name="Quest02_Meeting" xml:space="preserve">
    <value>Meet with the Rebel Transport</value>
  </data>
  <data name="Quest02_Meeting_Coordinate" xml:space="preserve">
    <value>Go to GPS coordinates</value>
  </data>
  <data name="Quest02_Meeting_StayClose" xml:space="preserve">
    <value>Stay close to GPS coordinates</value>
  </data>
  <data name="Quest02_Meeting_Tank" xml:space="preserve">
    <value>Enter the tank cockpit</value>
  </data>
  <data name="Quest02_Meeting_Wait" xml:space="preserve">
    <value>Wait for the Rebel ship to deploy its tank</value>
  </data>
  <data name="Quest03B_OnFoot" xml:space="preserve">
    <value>Breach the defenses and enter the base</value>
  </data>
  <data name="Quest03B_OnFoot_TurretControlHint1" xml:space="preserve">
    <value>Press [ {0} ]  key to control turret</value>
  </data>
  <data name="Quest03B_OnFoot_TurretControlHint2" xml:space="preserve">
    <value>Press [ {0} ] key to exit a turret</value>
  </data>
  <data name="Quest03B_OnFoot_UseShips" xml:space="preserve">
    <value>The wrecks have functional turrets, use them to fight with and to breach the main entrance.</value>
  </data>
  <data name="Quest03_Tank" xml:space="preserve">
    <value>Drive the tank and breach the base defenses</value>
  </data>
  <data name="Quest03_Tank_Brakes" xml:space="preserve">
    <value>Press [ {0} ] key to toggle handbrakes</value>
  </data>
  <data name="Quest03_Tank_EscapeTurret" xml:space="preserve">
    <value>Press [ {0} ] key to exit a turret</value>
  </data>
  <data name="Quest03_Tank_FrontTurrets" xml:space="preserve">
    <value>Use weapons to punch a hole in the main entrance ([ {0} ] key)</value>
  </data>
  <data name="Quest03_Tank_Quest" xml:space="preserve">
    <value>Use [ {0} ] key to toggle reactors</value>
  </data>
  <data name="Quest03_Tank_Turrets" xml:space="preserve">
    <value>Press [ {0} ] and [ {1} ] keys to control turrets</value>
  </data>
  <data name="Quest04_BaseStart" xml:space="preserve">
    <value>Enter the base interior</value>
  </data>
  <data name="Quest04_BaseStart_Exit" xml:space="preserve">
    <value>Use the button panel to open the door to the drone factory</value>
  </data>
  <data name="Quest04_BaseStart_Intro" xml:space="preserve">
    <value>Continue onwards, further into the base</value>
  </data>
</root>